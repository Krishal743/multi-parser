Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> array_declaration
Rule 1     array_declaration -> LET IDENTIFIER LBRACKET RBRACKET SEMICOLON

Terminals, with rules where they appear

IDENTIFIER           : 1
LBRACKET             : 1
LET                  : 1
RBRACKET             : 1
SEMICOLON            : 1
error                : 

Nonterminals, with rules where they appear

array_declaration    : 0

Parsing method: LALR

state 0

    (0) S' -> . array_declaration
    (1) array_declaration -> . LET IDENTIFIER LBRACKET RBRACKET SEMICOLON

    LET             shift and go to state 2

    array_declaration              shift and go to state 1

state 1

    (0) S' -> array_declaration .



state 2

    (1) array_declaration -> LET . IDENTIFIER LBRACKET RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 3


state 3

    (1) array_declaration -> LET IDENTIFIER . LBRACKET RBRACKET SEMICOLON

    LBRACKET        shift and go to state 4


state 4

    (1) array_declaration -> LET IDENTIFIER LBRACKET . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 5


state 5

    (1) array_declaration -> LET IDENTIFIER LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 6


state 6

    (1) array_declaration -> LET IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    $end            reduce using rule 1 (array_declaration -> LET IDENTIFIER LBRACKET RBRACKET SEMICOLON .)

