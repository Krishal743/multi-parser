Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> function_declaration
Rule 1     function_declaration -> DEF IDENTIFIER LPAREN params RPAREN COLON
Rule 2     params -> param
Rule 3     params -> params COMMA param
Rule 4     params -> empty
Rule 5     param -> IDENTIFIER
Rule 6     empty -> <empty>

Terminals, with rules where they appear

COLON                : 1
COMMA                : 3
DEF                  : 1
IDENTIFIER           : 1 5
LPAREN               : 1
RPAREN               : 1
error                : 

Nonterminals, with rules where they appear

empty                : 4
function_declaration : 0
param                : 2 3
params               : 1 3

Parsing method: LALR

state 0

    (0) S' -> . function_declaration
    (1) function_declaration -> . DEF IDENTIFIER LPAREN params RPAREN COLON

    DEF             shift and go to state 2

    function_declaration           shift and go to state 1

state 1

    (0) S' -> function_declaration .



state 2

    (1) function_declaration -> DEF . IDENTIFIER LPAREN params RPAREN COLON

    IDENTIFIER      shift and go to state 3


state 3

    (1) function_declaration -> DEF IDENTIFIER . LPAREN params RPAREN COLON

    LPAREN          shift and go to state 4


state 4

    (1) function_declaration -> DEF IDENTIFIER LPAREN . params RPAREN COLON
    (2) params -> . param
    (3) params -> . params COMMA param
    (4) params -> . empty
    (5) param -> . IDENTIFIER
    (6) empty -> .

    IDENTIFIER      shift and go to state 5
    RPAREN          reduce using rule 6 (empty -> .)
    COMMA           reduce using rule 6 (empty -> .)

    params                         shift and go to state 6
    param                          shift and go to state 7
    empty                          shift and go to state 8

state 5

    (5) param -> IDENTIFIER .

    RPAREN          reduce using rule 5 (param -> IDENTIFIER .)
    COMMA           reduce using rule 5 (param -> IDENTIFIER .)


state 6

    (1) function_declaration -> DEF IDENTIFIER LPAREN params . RPAREN COLON
    (3) params -> params . COMMA param

    RPAREN          shift and go to state 9
    COMMA           shift and go to state 10


state 7

    (2) params -> param .

    RPAREN          reduce using rule 2 (params -> param .)
    COMMA           reduce using rule 2 (params -> param .)


state 8

    (4) params -> empty .

    RPAREN          reduce using rule 4 (params -> empty .)
    COMMA           reduce using rule 4 (params -> empty .)


state 9

    (1) function_declaration -> DEF IDENTIFIER LPAREN params RPAREN . COLON

    COLON           shift and go to state 11


state 10

    (3) params -> params COMMA . param
    (5) param -> . IDENTIFIER

    IDENTIFIER      shift and go to state 5

    param                          shift and go to state 12

state 11

    (1) function_declaration -> DEF IDENTIFIER LPAREN params RPAREN COLON .

    $end            reduce using rule 1 (function_declaration -> DEF IDENTIFIER LPAREN params RPAREN COLON .)


state 12

    (3) params -> params COMMA param .

    RPAREN          reduce using rule 3 (params -> params COMMA param .)
    COMMA           reduce using rule 3 (params -> params COMMA param .)

